assume {
  (G (! (Roomlight.on <-> Roomlight.off)));
  (G (([Roomlight.light <- Roomlight.turnOn()] || ([Roomlight.light <- Roomlight.toggle()] && Roomlight.off)) -> (X (F (([Roomlight.light <- Roomlight.turnOff()] || [Roomlight.light <- Roomlight.toggle()]) R Roomlight.on)))));
  (G (([Roomlight.light <- Roomlight.turnOff()] || ([Roomlight.light <- Roomlight.toggle()] && Roomlight.on)) -> (X (F (([Roomlight.light <- Roomlight.turnOn()] || [Roomlight.light <- Roomlight.toggle()]) R Roomlight.off)))));
  (G (((on Roomlight.intent) || (off Roomlight.intent)) || (toggle Roomlight.intent)));
  (G ((on Roomlight.intent) -> (! ((off Roomlight.intent) || (toggle Roomlight.intent)))));
  (G ((off Roomlight.intent) -> (! ((on Roomlight.intent) || (toggle Roomlight.intent)))));
  (G ((toggle Roomlight.intent) -> (! ((on Roomlight.intent) || (off Roomlight.intent)))));
}

guarantee {
  (G ((on Roomlight.intent) -> (F (Roomlight.on W (! (on Roomlight.intent))))));
  (G ((off Roomlight.intent) -> (F (Roomlight.off W (! (off Roomlight.intent))))));
  (G (((toggle Roomlight.intent) && Roomlight.on) -> (F (Roomlight.off W (! (off Roomlight.intent))))));
  (G (((toggle Roomlight.intent) && Roomlight.off) -> (F (Roomlight.on W (! (on Roomlight.intent))))));
}