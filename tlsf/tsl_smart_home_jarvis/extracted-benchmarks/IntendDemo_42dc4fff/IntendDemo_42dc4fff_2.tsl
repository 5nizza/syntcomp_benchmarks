assume {
  (G ((Room.somebodyEnters -> (! Room.empty)) W (Room.empty && Room.somebodyLeaves)));
  (G ((Room.empty -> Room.empty) W Room.somebodyEnters));
  (G (Room.somebodyEnters -> (! Room.empty)));
}

guarantee {
  (G (Room.somebodyEnters -> (X ([Roomlight.intend <- on()] W (Room.somebodyLeaves && Room.empty)))));
  (G ((Room.somebodyLeaves && Room.empty) -> (X ([Roomlight.intend <- off()] W Room.somebodyEnters))));
}
