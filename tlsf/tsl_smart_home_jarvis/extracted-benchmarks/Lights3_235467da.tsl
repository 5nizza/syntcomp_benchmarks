assume {
  (G (room.empty -> (! switch.toggled)));
  (G (room.somebodyEnters -> ((! room.empty) W room.somebodyLeaves)));
  (G ((room.somebodyLeaves && room.empty) -> (room.empty W room.somebodyEnters)));
  (G (! (room.light.on <-> room.light.off)));
  (G (([room.light <- turnOn()] || ([room.light <- toggle()] && room.light.off)) -> (X (F (([room.light <- turnOff()] || [room.light <- toggle()]) R room.light.on)))));
  (G (([room.light <- turnOff()] || ([room.light <- toggle()] && room.light.on)) -> (X (F (([room.light <- turnOn()] || [room.light <- toggle()]) R room.light.off)))));
}

guarantee {
  (G ((bright outside.brightness) -> ((switch.toggled && room.light.off) -> (X (F (room.light.on W (switch.toggled || room.empty)))))));
}