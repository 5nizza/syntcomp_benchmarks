//import "../deviceModel/Shades.tsl" as Shades
//import "../deviceModel/Time.tsl" as Time
//import "../deviceModel/Alarm.tsl" as Alarm

always guarantee {
  bed.enter
    -> F ( (Time.between Time.pm7 Time.pm8 -> Shades.closed)
        W (Alarm.alarm && F ((! bright outside.brightness -> Shades.closed) W bed.exit)))
}

guarantee {
  (G (((Time.am630 && (! (Time.saturday || Time.sunday))) && bed.occupied) -> (F ((((G (bright outside.brightness)) -> (F (G Shades.open))) && ((G (! (bright outside.brightness))) -> (F (G Shades.closed)))) W (Room.somebodyLeaves && Room.empty)))));
}
guarantee {
  (G (((Time.am630 && (! (Time.saturday || Time.sunday))) && bed.occupied) -> (F (bed.exit || (Time.am7 && (F (Alarm.alarm W bed.exit)))))));
}
always guarantee {  
  bright outside.brightness
    -> F Shades.closed
}

always guarantee {
  room.screen.lowered && bright outside.brightness
    -> F Shades.closed
}
